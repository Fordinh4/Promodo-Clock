:root{
    /* It's a selector that targets the highest level element (<html>) and use to establish a global scope for these variables which make them accessible throughout the document */
    font-size: 62.5%; /* the base font size is 10px == 1 rem => 16px = 1.6 rem*/
    --color-primary: #130303; /*Licorice*/
    --color-secondary: #FFCDBC; /*Pale Dogwood*/
    --color-font: #A0B7BA; /*Ash Gray*/

    --color-shadow: #2D080A; /*Black Bean*/
    
}

/* The buttons, and save changes when hover*/
i:hover, .Savebtn:hover, .btn:hover{
    color: var(--color-secondary); 
    opacity: 0.9; 
    text-shadow: 0 0 10px var(--color-secondary);
}


/*==== The clock section ====*/
*{
    /*It is a universal selector that targets all elements on a web page.*/
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html, body, input, .Savebtn, .btn {
    height: 100%;
    background-color: var(--color-primary);
    font-size: 1.6rem;
    font-family: 'Bagel Fat One', cursive;
}

p, i, h1, label, input, .Savebtn, .btn, .title{
    /*i is the icon*/
    color: var(--color-font);
}

i {
    font-size: 3.2rem; /*32px*/
}

h1 {
    font-size: 3rem;
}

/*==== Promodo Part ====*/

section{
    /*flex is the item length, relative to others inside the container, and the default direction of flex is in row*/
    display: flex; 
    align-items: center;
    height: 100%;
}

.container{
    width: min(42.5rem,100%);
    margin-inline: auto;
    padding-inline: 2rem;
    display: flex;
    flex-direction: column;

    justify-content: center;
    align-items: center;

}

.panel{
    display: grid;
    grid-template-columns: 1fr 1fr;
    
    text-align: center;
    width: 20rem;
    margin-block: 5rem;
    padding: 1rem;
    border-radius: 10rem;

    -webkit-box-shadow: 0px 0px 14px 9px var(--color-shadow); 
    box-shadow: 0px 0px 14px 9px var(--color-shadow);
}

.panel p{
    opacity: .8;
    transition: 1s ease-in;
    /*The transition part is for the work and break when its class is active or not*/
}

.panel p.active{
    /*When one of the mode is active*/
    opacity: 1;
    color: var(--color-secondary);
}

#progressBar{
    display: flex;
    justify-content: center;
    align-items: center;

    width: 30rem;
    height: 30rem;
    border-radius: 50%;

    background-image: conic-gradient(var(--color-secondary) 360deg, var(--color-shadow) 0deg);

    -webkit-box-shadow: 0px 0px 14px 9px var(--color-shadow); 
    box-shadow: 0px 0px 14px 9px var(--color-shadow);
}

.progress_circle{
    display: flex;
    justify-content: center;
    align-items: center;
    width: 29rem;
    height: 29rem;
    border-radius: 50%;
    background-color: var(--color-primary);

}

.time{
    position: relative;
    display: flex;
    /* flex-direction: row; */
}

.time p{
    font-size: 5.6rem;
}

.time p:nth-of-type(2){
    position: relative;
    top: -0.2rem;
    margin-inline: 1rem;
}

.controls {
    margin-top: 2rem;
    margin-left: -1.8rem;
}

.controls button {
    border: none;
    background-color: transparent;
    cursor: pointer;
    margin: 0 2rem;
}

.controls #pause {
    display: none;
}

/*==== The menu section ====*/

.menuButtons{
    position: absolute;
    bottom: 0.6rem;
    left: 0.6rem;
}

.menuButtons button, .closeMenubtn{
    border: none;
    background-color: transparent;
    cursor: pointer;
    display: flex;
    margin: 1.5rem 1rem;
}

      /* The setting pop up setting section */
/* The darken background when the setting panel pop up */
.popup{
    opacity: 0;
    visibility: hidden;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.4);  
}

/* JS class for setting and todo list panels */
.popup.visible{
    /*When this class is added to the .popup, the transition of opacity and visibility will begin*/
    opacity: 1; /* Changing from 0 to 1 with the transition ease*/
    visibility: visible;
}

/* The main panel */
.popupContent{
    position: relative;
    background-color: var(--color-primary);
    margin: 0 auto;
    top: 35%;
    padding: 1.2rem 2rem 1.8rem;
    border: 0.1rem solid var(--color-secondary);
    border-radius: 10px;
    width: 35rem;
    -webkit-box-shadow: 0px 0px 20px 9px var(--color-shadow); 
    box-shadow: 0px 0px 20px 9px var(--color-shadow);
}

.popupContent h1{
    text-align: center;
    margin-top: -2rem;
    margin-bottom: -1rem;
    margin-left: 1rem;
}

.popupContent label{
    display: block;
    font-size: large;
    margin-top: 1.5rem;
    margin-bottom: 0.5rem;
}

.popupContent input{
    width: 100%;
    padding: 0.3rem 0.7rem;
    border: 0.1rem solid var(--color-secondary);
    border-radius: 0.5rem;
}

.closeMenubtn{
    margin: 0 28.8rem;
}

.Savebtn{
    display: block;
    cursor: pointer;
    width: 60%;
    height: 3.5rem;
    margin: 0 20%;
    margin-top: 6%;
    border: 0.1rem solid var(--color-secondary);
    border-radius: 9px;
}

/*===== The Todo list =====*/

/* The background of the panel*/
.todoPanel{
    opacity: 0;
    visibility: hidden;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.4);  
}

.todoPanel.visible{
    opacity: 1; 
    visibility: visible;
}

.toDoList{
    position: relative;
    background-color: var(--color-primary);
    margin: 0 auto;
    top: 35%;
    padding: 1.2rem 2rem 1.8rem;
    border: 0.1rem solid var(--color-secondary);
    border-radius: 10px;
    width: 35rem;
    -webkit-box-shadow: 0px 0px 20px 9px var(--color-shadow); 
    box-shadow: 0px 0px 20px 9px var(--color-shadow);

    max-height: 53rem;
    overflow-y: scroll;
}

/* scroll bar inside the todo list */
::-webkit-scrollbar {
  width: 1px;
  visibility: hidden;
}


/* alert */
.alert{
    text-transform: uppercase;
    letter-spacing: 1px;
    margin-bottom: 1rem;
    padding: .5rem 0;
    border-radius: .25rem;
    /* font-size: 2rem; */
    text-align: center;

    width: 27rem;
    margin: 0 auto;
}

/* JS classes to notify the user about the action that just made*/
.alert-danger {
    color: #c0111f;
    background-color: #f78d96;
    box-shadow: 0px 0px 8px 1px #f78d96;

}

.alert-success {
    color: #0daa61;
    background-color: #bce5d3;
    box-shadow: 0px 0px 8px 1px #bce5d3;

}

.title{
    text-align: center;
    margin-bottom: 2rem;
    margin-left: 2rem;
    font-size: 3rem;
}

.control{
    display: flex;
    justify-content: center;
}

#entry{
    width: 100%;
    padding: 0.3rem 0.7rem;
    border: 0.1rem solid var(--color-secondary);
    border-radius: 0.5rem 0 0 0.5rem;
    flex: 1;
}

.submit-btn,.cancel-btn{
    outline: none;
    border: 0.1rem solid var(--color-secondary);
    padding: 0.3rem 0.7rem;
    flex: 0 0 .5rem;
    cursor: pointer;
}

/* To-do list */
.list-container{
    margin-top: 2rem;
}

.list-item{
    border-bottom:1px solid var(--color-secondary);
    list-style: none; /* -> get rid of the bullet points */
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: .5rem .9rem .5rem .4rem;
}

.list-item i{
    font-size: 2rem;
}

.text{
    /* To push the button to the side */
    width: 80%;
    word-wrap: break-word;
    font-size: 1.6rem;
}

.tdlIcon{
    /* Space between icon */
    cursor: pointer;
    margin: 0 5px;
}

/* Js action for checkItem() */
/* Mean that: if my list-item have the class liChecked, i will toggle the text */
li.liChecked .text{
    text-decoration: line-through;
    text-decoration-thickness: 0.3rem;
    text-decoration-color: var(--color-secondary);
}

li.liChecked .tdlIcon.fa-pen-to-square{
    visibility: hidden;
}


/* Clear button */
.clear-btn{
    border:none;
    outline: none;
    border-radius: 0.5rem;

    padding: 0.3rem 0.7rem;
    cursor: pointer;
  
    color: #c0111f;
    background-color: #f78d96;
    box-shadow: 0px 0px 8px 1px #f78d96;
  
    width: 14rem;
    display: block;
    margin: 1.2rem auto 0;
} 

#closeTDLbtn{
    border: none;
    background-color: transparent;
    cursor: pointer;
    float: right;
    margin-right: -0.75rem;
}

.d-none{
    display: none;
}

/* JS CLASSES for editItem()*/
.v-none{
    visibility: hidden ;
  }